//****************************************************************************** 
//  Секция include: здесь подключается заголовочный файл к модулю 
//****************************************************************************** 
#include  <stdint.h>
#include "Timers.h"      // Включаем файл заголовка для нашего модуля
#include "STM32.h"

//****************************************************************************** 
//  Секция определения переменных, используемых в модуле 
//****************************************************************************** 

//------------------------------------------------------------------------------ 
// Глобальные  
//------------------------------------------------------------------------------ 

//char GlobalVar1; 
//char GlobalVar2; 

//------------------------------------------------------------------------------ 
// Локальные 
//------------------------------------------------------------------------------ 
static uint32_t _SysTickCounter;
volatile uint32_t _CyclePerMicroseconds;

//****************************************************************************** 
//  Секция прототипов локальных функций 
//****************************************************************************** 
//void local_func1 (void); 
//void local_func2 (void); 

//****************************************************************************** 
//  Секция описания глобальных функций
//****************************************************************************** 
  // Инициализируем SysTick
void SysTickConfig(void)
{
  SystemCoreClockUpdate();
  SysTick_Config(SystemCoreClock/1000);
  NVIC_EnableIRQ(SysTick_IRQn);
  _CyclePerMicroseconds = SystemCoreClock/1000000;
}

// Обработка прерывания от SysTick
extern "C" void SysTick_Handler(void)
{
  SysTick->CTRL;                                                                // Сбрасываем флаг прерывания от SysTick
  _SysTickCounter++;                                                            // Инкрементируем переменную счётчик миллисекунд
}

//Функция millis()
uint32_t millis(void)
{
  return _SysTickCounter;
}

// Функция micros()
uint32_t micros(void)
{
  return(SysTick->LOAD - SysTick->VAL)/_CyclePerMicroseconds + _SysTickCounter*1000;
}

// Функция delay()
volatile void delay(uint16_t MS)
{
  uint32_t Counter = millis();
  while((MS+Counter) > millis())
  {
    asm("nop");
  }
}

//
volatile void delayMicroseconds(uint16_t US)
{

}

//****************************************************************************** 
//  Секция описания локальных функций
//****************************************************************************** 
//void local_func1 (void) 
//{ 
//    ...; 
//} 

//****************************************************************************** 
//  ENF OF FILE 
//****************************************************************************** 

