//****************************************************************************** 
//  Секция include: здесь подключается заголовочный файл к модулю 
//****************************************************************************** 
#include  <stdint.h>
#include "RCC_HSI_48_Init.h"      // Включаем файл заголовка для нашего модуля

//****************************************************************************** 
//  Секция определения переменных, используемых в модуле 
//****************************************************************************** 

//------------------------------------------------------------------------------ 
// Глобальные  
//------------------------------------------------------------------------------ 

//char GlobalVar1; 
//char GlobalVar2; 

//------------------------------------------------------------------------------ 
// Локальные 
//------------------------------------------------------------------------------ 
//****************************************************************************** 
//  Секция прототипов локальных функций 
//****************************************************************************** 

//****************************************************************************** 
//  Секция описания глобальных функций
//****************************************************************************** 

/*
 * Настройка внутреннего генератора на масимальную частоту
 */
void SystemClock_Config(void)
{
  uint32_t StartUpCounter;

  if(!(RCC->CR & RCC_CR_HSIRDY))                                                // Проверяем запущен ли генератор HSI
  {
    RCC->CR     |= RCC_CR_HSION;                                                // Если нет, запускаем его
    for (StartUpCounter = 0;; StartUpCounter++)                                 // В цикле ждём определённое время ожидая запуска
    {
      if(RCC->CR & RCC_CR_HSIRDY) break;                                        // Запуск есть, выходим из цикла
      if(StartUpCounter > 0x1000) return;                                       // Запуска нет, выходим из функции
    }
  }
  RCC->CFGR   |= RCC_CFGR_SW_1;                                                 // Источником тактирования является генератор HSI. Так то не нужно. При сбросе он и так там.
  RCC->CFGR   |= RCC_CFGR_PLLMUL_1 | RCC_CFGR_PLLMUL_3;                         // Умножитель PLL=12
  RCC->CFGR   |= RCC_CFGR_PLLSRC_HSI_DIV2;                                      // Источник тактирования для PLL, является HSI/2
  RCC->CR     |= RCC_CR_PLLON;                                                  // Включаем PLL
  for (StartUpCounter = 0;; StartUpCounter++)
  {
    if(RCC->CR & RCC_CR_PLLRDY) break;                                          // Запустился, вываливаемся из цикла
    if(StartUpCounter > 0x1000)                                                 // Не запустился гад
    {
      RCC->CR &= ~RCC_CR_PLLON;                                                 //Останавливаем PLL
      return;
    }
  }
  FLASH->ACR  |= (0x02<<FLASH_ACR_LATENCY_Pos);                                 // Таймаут FLASH=2, т.к. частота задающего генератора 48 МГц
  RCC->CFGR   |= (0x02<<RCC_CFGR_SW_Pos);                                       // Переключаемся на работу от PLL
  SysTickConfig();                                                              // Вызываем настройку системного таймера SysTick
}

//****************************************************************************** 
//  Секция описания локальных функций
//****************************************************************************** 
//****************************************************************************** 
//  ENF OF FILE 
//****************************************************************************** 

